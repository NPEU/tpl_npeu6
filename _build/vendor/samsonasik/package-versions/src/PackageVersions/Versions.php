<?php

namespace PackageVersions;

/**
 * This class is generated by samsonasik/package-versions, specifically by
 * @see \PackageVersions\Installer
 *
 * This file is overwritten at every run of `composer install` or `composer update`.
 */
final class Versions
{
    const VERSIONS = array (
  'beelab/bowerphp' => 'v0.5.3@d8950d65377818fc97052b3b73deac433837fee2',
  'guzzle/guzzle' => 'v3.9.3@0645b70d953bc1c067bbc8d5bc53194706b628d9',
  'knplabs/github-api' => '1.7.1@98d0bcd2c4c96a40ded9081f8f6289907f73823c',
  'leafo/scssphp' => 'v0.7.7@1d656f8c02a3a69404bba6b28ec4e06edddf0f49',
  'psr/log' => '1.1.0@6c001f1daafa3a3ac1d8ff69ee4db8e799a654dd',
  'samsonasik/package-versions' => '1.1.0@1dab884977464613383afe0e4be571cdef2317fc',
  'symfony/console' => 'v3.4.27@15a9104356436cb26e08adab97706654799d31d8',
  'symfony/debug' => 'v4.2.8@2d279b6bb1d582dd5740d4d3251ae8c18812ed37',
  'symfony/event-dispatcher' => 'v2.8.50@a77e974a5fecb4398833b0709210e3d5e334ffb0',
  'symfony/filesystem' => 'v3.4.27@acf99758b1df8e9295e6b85aa69f294565c9fedb',
  'symfony/finder' => 'v3.4.27@61af5ce0b34b942d414fe8f1b11950d0e9a90e98',
  'symfony/polyfill-ctype' => 'v1.11.0@82ebae02209c21113908c229e9883c419720738a',
  'symfony/polyfill-mbstring' => 'v1.11.0@fe5e94c604826c35a32fa832f35bd036b6799609',
  'symfony/process' => 'v3.4.27@a9c4dfbf653023b668c282e4e02609d131f4057a',
  'vierbergenlars/php-semver' => '3.0.2@be22b86be4c1133acc42fd1685276792024af5f9',
  'npeu/npeu6_build' => '9999999-dev@ee69fd3beab11d9f85424ea4e766bfa6a185d4c8',
);

    private function __construct()
    {
    }

    /**
     * @throws \OutOfBoundsException if a version cannot be located
     */
    public static function getVersion($packageName)
    {
        $selfVersion = self::VERSIONS;

        if (! isset($selfVersion[$packageName])) {
            throw new \OutOfBoundsException(
                'Required package "' . $packageName . '" is not installed: cannot detect its version'
            );
        }

        return $selfVersion[$packageName];
    }

    /**
     * @throws \OutOfBoundsException if a version cannot be located
     */
    public static function getShortVersion($packageName)
    {
        return explode('@', static::getVersion($packageName))[0];
    }

    /**
     * @throws \OutOfBoundsException if a version cannot be located
     */
    public static function getMajorVersion($packageName)
    {
        return explode('.', static::getShortVersion($packageName))[0];
    }
}
