// Fall-Back Nav Bar Pattern v2.0.0
/*------------------------------------------------------------------------------------------------*\

    Designed for use with the basic [CSS Mustard Cut](https://github.com/Fall-Back/CSS-Mustard-Cut)
    IE 9+, FF 8+, Opera 12, Chrome 29+, Android ~4.4+
    Chrome 29+, Opera 16+, Safari 6.1+, iOS 7+, Android ~4.4+

\*------------------------------------------------------------------------------------------------*/


$f__nav-bar--breakpoint--enhanced:         $f__breakpoint--enhanced;


// Colours:

$f__nav-bar--base-ui-color:                $f__base-ui-color !default;
$f__nav-bar--base-text-color:              $f__base-text-color !default;


$f__nav-bar--background-color:             $f__nav-bar--base-ui-color !default;

$f__nav-bar__link--color:                  #fff !default;
$f__nav-bar__link--color--alt:             $f__nav-bar__link--color !default;
$f__nav-bar__link--background-color:       $f__nav-bar--background-color !default;
$f__nav-bar__link--background-color--alt:  darken($f__nav-bar--background-color, 14%) !default;
$f__nav-bar__link--background-color--alt2: darken($f__nav-bar--background-color, 7%) !default;

$f__nav-bar__link--border-color:           rgba(255,255,255,0.2) !default;
$f__nav-bar__link--border-style:           solid !default;
$f__nav-bar__link--border-width:           1px !default;
$f__nav-bar__link--border-radius:          0 !default;


$f__sub-nav--background-color:             darken($f__nav-bar--base-ui-color, 20%) !default;

$f__sub-nav__link--border-color:           rgba(255,255,255,0.3) !default;
$f__sub-nav__link--border-style:           dashed !default;
$f__sub-nav__link--border-width:           1px !default;


$f__sub-nav__link--color:                  $f__nav-bar__link--color !default;
$f__sub-nav__link--color--alt:             $f__sub-nav__link--color !default;
$f__sub-nav__link--background-color:       $f__sub-nav--background-color !default;
$f__sub-nav__link--background-color--alt:  lighten($f__sub-nav__link--background-color, 10%) !default;


// Not sure I need this:
//$f__nav-bar__title--background-color:      $f__nav-bar--background-color !default;



// Sizes:

$f__nav-bar--font-size:                    $f__base-font-size !default;
$f__nav-bar--height:                       ($f__base-em-ratio * 1.5em) !default;
$f__nav-bar--spacing:                      ($f__nav-bar--height / 8) !default;
$f__nav-bar--margin-bottom:                0 !default;
$f__nav-bar__title--padding:               0 !default;



// Transitions:

$f__sub-nav--transition:                   margin-top 0.5s ease !default;



// Other:

$f__nav-bar__title--font-size:             1.5em !default;
$f__nav-bar__title--font-style:            normal !default;
$f__nav-bar__title--font-weight:           bold !default;
$f__nav-bar__title--font-family:           Arial, Helvetica, sans-serif !default;

$f__nav-bar-z-index:                       9999 !default;

// Calculate title heights based on IT'S font size:
$f__nav-bar__title--height:                (($f__base-line-height * 1.5) / (($f__nav-bar__title--font-size / 1em) * $f__base-font-size) * 1em);


$f__nav-bar-divider-first-item:            false !default;

// Tell the JS that the this CSS has loaded:

/*
    This is a bit of a hack, but it's a way of letting JS know that this CSS has loaded.
    It doesn't work for Opera Mini, but I'm happy to provide this browser only with the
    unenhanced version.
    UPDATE: Due to problem with FOBP, now checking for existence of class in styesheet earlier
    on, so this isn't needed:
*/
/*.nav-bar::before {
    content: 'CSS Loaded';
    display: none;
}*/
// Use this instead:
.js-nav-bar {
    // This could be any inconsequential declaration:
    border: 0;
}


/* -- Basic/fallback layout --------------------------------------------------------------------- */

    /* -- Main wrapper ---------------------------------------------------------------------------*/

    /*
        1. Helps to position above subsequent elements so subnavs sit on top.
    */
    .nav-bar.nav-bar {
        background-color: $f__nav-bar--background-color;
        position: relative;
        z-index: $f__nav-bar-z-index; /* [1] */

        @if $f__nav-bar--font-size != $f__base-font-size {
            font-size: $f__nav-bar--font-size;
        }
    }

    /* -------------------------------------------------------------------------------------------*/

    /* -- Layout ---------------------------------------------------------------------------------*/

    /*
        iOS/OSX seem to apply mystery margins.
    */
    .nav-bar .nav-bar__end,
    .nav-bar .nav-bar__main,
    .nav-bar .nav-bar__start,
    .nav-bar .nav-bar__title {
        margin: 0;
    }

    .nav-bar .subnav {
        padding: 0;
        margin: 0;
    }


    /*
    */
    .nav-bar .nav-bar__items,
    .nav-bar .subnav__items {
        display: block;
        list-style-type: none;
        padding: 0;
        margin: 0;
    }

    .nav-bar .subnav__items {
        margin-left: $f__nav-bar--spacing * 4;
        background-color: $f__sub-nav--background-color;
    }


    .nav-bar .nav-bar__item {
        margin: 0;
    }

    .nav-bar .subnav__item {
        margin: 0;
        float: left;
    }

    .nav-bar .subnav__items--stacked .subnav__item,
    .nav-bar .subnav__items--stacked .subnav__link {
        float: none;
    }


    // Contain floats:
    .nav-bar .subnav__items::before,
    .nav-bar .subnav__items::after {
        content: " ";
        display: table;
    }

    .nav-bar .subnav__items::after {
        clear: both;
    }

    /* -------------------------------------------------------------------------------------------*/

    /* -- Links and headings ----------------- ---------------------------------------------------*/

    /*
    */
    .nav-bar .nav-bar__title .nav-bar__link {
        height: $f__nav-bar__title--height;
        line-height: $f__nav-bar__title--height;

        font-family: $f__nav-bar__title--font-family;
        font-weight: $f__nav-bar__title--font-weight;
        font-style: $f__nav-bar__title--font-style;
        font-size: $f__nav-bar__title--font-size;

        white-space: nowrap;
    }

	/*
		1. These override button styles defined as part of StartCSS. I may consider making these
		   customisable via more variables.
	*/
    .nav-bar .nav-bar__link,
    .nav-bar .subnav__link,
    .nav-bar .subnav__heading {
        display: block;
        margin: 0;
        padding-left: $f__nav-bar--spacing * 2;
        padding-right: $f__nav-bar--spacing * 2;
		padding-bottom: 0; /* 1 */
		padding-top: 0; /* 1 */

        border: 0;
        border-radius: $f__nav-bar__link--border-radius;
        line-height: $f__nav-bar--height;

        text-decoration: none;
        outline: 0;

		box-shadow: none; /* 1 */
    }

    /*
        FF15- fix button height.
    */
    .nav-bar button.nav-bar__link {
        min-height: $f__nav-bar--height;
    }



    .nav-bar .nav-bar__link  {
        color: $f__nav-bar__link--color;
        background-color: $f__nav-bar__link--background-color;
    }

    .nav-bar__link--centered {
            text-align: center;
    }

    .nav-bar .subnav__heading {
        color: $f__nav-bar__link--color;
    }

    .nav-bar .subnav__link {
        color: $f__sub-nav__link--color;
        background-color: $f__sub-nav__link--background-color;
    }


    /*
        Provide interaction effects for nav-bar links that ARE links:
        (this excludes submenu heading links - note that submenu links should never also be
        submenu heading links)
    */

    .nav-bar .nav-bar__link:hover,
    .nav-bar .nav-bar__link:active,
    .nav-bar .nav-bar__link [aria-expanded="true"] {
        color: $f__nav-bar__link--color--alt;
        background-color: $f__nav-bar__link--background-color--alt;
        border: 0;
    }

    .nav-bar .nav-bar__link:focus {
        color: $f__nav-bar__link--color--alt;
        background-color: $f__nav-bar__link--background-color--alt2;
        border: 0;
        box-shadow: none;
    }

    .nav-bar .subnav__link:hover,
    .nav-bar .subnav__link:focus,
    .nav-bar .subnav__link:active {
        color: $f__sub-nav__link--color--alt;
        background-color: $f__sub-nav__link--background-color--alt;
        border: 0;
        box-shadow: none;
    }


    .nav-bar .subnav__control {
        display: none;
    }

    /* -------------------------------------------------------------------------------------------*/

/* -----------------------------------------------------------------------------------------------*/

@media only screen and (max-width: $f__nav-bar--breakpoint--enhanced) {
    .nav-bar .subnav__items--stacked--only-narrow .subnav__item,
    .nav-bar .subnav__items--stacked--only-narrow .subnav__link {
        float: none;
    }
}

@media only screen and (min-width: $f__nav-bar--breakpoint--enhanced) {
    .nav-bar .subnav__items--stacked--only-wide .subnav__item,
    .nav-bar .subnav__items--stacked--only-wide .subnav__link {
        float: none;
    }
}


/* ********************************************************************************************** */
/* -- Enhanced layout --------------------------------------------------------------------------- */
/*
    This layout can only be used if JS is there to support the toggling of hidden submenus.
    (CSS only attempts weren't good enough)
    So, scoping these styles to the 'js-nav-bar' class.
*/

    @media only screen and (max-width: $f__nav-bar--breakpoint--enhanced) and (min-width:0\0) and (min-resolution:.001dpcm) {

        /* This is all for IE9: */
        .js-nav-bar .nav-bar,
        .js-nav-bar .nav-bar__start {
            width: 100%;
        }

        .js-nav-bar .nav-bar__start {
            display: table;
        }

        .js-nav-bar .nav-bar__start > * {
            display: table-cell;
        }

        .js-nav-bar .nav-bar__start .nav-bar__item:last-child {
            text-align: right;
        }

        .js-nav-bar .nav-bar__start .nav-bar__item:last-child > * {
            display: inline-block;
            vertical-align: top;
        }
    }

    @media only screen and (max-width: $f__nav-bar--breakpoint--enhanced) {
        /*
            1. FF8-21 needs this or is increases the height of this box for some reason.
            2. FF8-21 needs this.
        */
        .js-nav-bar .nav-bar__start {
            display: -webkit-flex;
            display: -moz-box;
            display: -ms-flexbox;
            display: flex;

            -webkit-justify-content: space-between;
                      -moz-box-pack: justify;
                      -ms-flex-pack: justify;
                    justify-content: space-between;

            vertical-align: middle; /* [1] */

            width: 100%; /* [2] */
        }

        .js-nav-bar .nav-bar__start > * {
            -webkit-flex: 0 0 auto;
           -moz-box-flex: 0;
                -ms-flex: 0 0 auto;
                    flex: 0 0 auto;
        }

        .js-nav-bar .nav-bar__title {
            -webkit-flex: 1 0 auto;
           -moz-box-flex: 1;
                -ms-flex: 1 0 auto;
                    flex: 1 0 auto;

            margin: 0 auto;
        }


        /*
            FF21- doesn't distribute items even if the -moz properties are set.
            This hack covers FF3.6+ though thias stylesheet will only be loaded by FF8 or greater
            depending on the mustart cut.
        */
        _:-moz-locale-dir(ltr), .js-nav-bar .nav-bar__start .nav-bar__item + .nav-bar__item:last-child {
            position: absolute;
            right: 0;
            top: 0;
        }

        /*
            Reset properties for FF22+
        */
        @supports (display: flex) {
            .js-nav-bar .nav-bar__start .nav-bar__item + .nav-bar__item:last-child {
                position: static;
            }
        }

    }


    @media only screen and (min-width: $f__nav-bar--breakpoint--enhanced) {


        /*.js-nav-bar .nav-bar {

        }*/

        /*
            Add dividers.
            Dividers created by adding right borders to nav-bar__items.
        */

        .js-nav-bar .nav-bar__title,
        .js-nav-bar .nav-bar__item {
            border-style: $f__nav-bar__link--border-style;
            border-color: $f__nav-bar__link--border-color;
            border-top-width: 0;
            border-bottom-width: 0;
            border-left-width: 0;
            border-right-width: $f__nav-bar__link--border-width;
        }
        
        @if $f__nav-bar-divider-first-item {
            .js-nav-bar .nav-bar__title:first-child,
            .js-nav-bar .nav-bar__item:first-child {
                border-left-width: $f__nav-bar__link--border-width;
            }
        }

        .js-nav-bar .nav-bar__link[href]  + * {
            border-style: $f__sub-nav__link--border-style;
            border-color: $f__sub-nav__link--border-color;
            border-top-width: 0;
            border-bottom-width: 0;
            border-left-width: $f__sub-nav__link--border-width;
            border-right-width: 0;
        }

        /* -- Layout -----------------------------------------------------------------------------*/

        /*
            1. Flex is only really needed for 'additional' to fill up the space.
               I don't think this would actually do any harm...
        */
        .js-nav-bar .nav-bar {
            display: -webkit-flex; /* 1 */
            display: -ms-flexbox; /* 1 */
            display: flex; /* 1 */
        }

        .js-nav-bar .nav-bar > * {
            -webkit-flex: 0 0 auto;
                -ms-flex: 0 0 auto;
                    flex: 0 0 auto;
        }

        .js-nav-bar .nav-bar > .nav-bar__fill-at-wide {
            -webkit-flex: 1 0 auto;
                -ms-flex: 1 0 auto;
                    flex: 1 0 auto;
        }


        // We want to force stacked subnav items back onto a line for Enhanced:
        .js-nav-bar .subnav__items--stacked .subnav__item {
            //float: left;
        }


        /*
            1. Prevent content from increasing height of element.
        */
        .js-nav-bar .subnav__control[data-content]::before {
            content: attr(data-content);
            display: inline;
            vertical-align: top; /* 1 */
        }


        // Contain floats:
        .js-nav-bar .nav-bar__items::before,
        .js-nav-bar .nav-bar__items::after {
            content: " ";
            display: table;
        }

        .js-nav-bar .nav-bar__items::after {
            clear: both;
        }

        .js-nav-bar .nav-bar::after {
            content: " ";
            display: table;
            clear: both;
		}

        /*
            Prevent anything wrapping (fixed height is crucial to making this work),
            and make things float
        */
        .js-nav-bar .nav-bar__title,
        .js-nav-bar .nav-bar__main,
        .js-nav-bar .nav-bar__item,
        .js-nav-bar .nav-bar__item > *,
        .js-nav-bar .subnav__link ,
        .js-nav-bar .subnav__heading {
            white-space: nowrap;
            float: left;
        }
        
        

        .js-nav-bar .nav-bar__end {
            white-space: nowrap;
            float: right;

            -webkit-flex: 1 1 auto;
                -ms-flex: 1 1 auto;
                    flex: 1 1 auto;
        }




        /*
			This pseudo element helps to cover any subnavs to stop them being visible in the main
			nav-bar.
		*/
        //.js-nav-bar.nav-bar::before {
        .js-nav-bar .nav-bar::before {
			content: "";
			display: block;
			position: absolute;
			left: 0;
			right: 0;
			top: 0;
			bottom: 0;
			z-index: -1;
			background-color: $f__nav-bar--background-color;
		}


        /* -- Behaviour: -------------------------------------------------------------------------*/

        // Hide the headings - we don't need those in Enhanced:
        .js-nav-bar .subnav__heading {
            display: none;
        }

        // But we do need the controls, so show those:
        .js-nav-bar .subnav__control {
            display: block;
        }

        // We only need one open/close icon displayed at a time, so hide one set:
        .js-nav-bar .subnav__control .icon--is-open,
        .js-nav-bar .subnav__control[aria-expanded="true"] .icon--is-closed {
            display: none;
        }

        // And show the inverse:
        .js-nav-bar .subnav__control .icon--is-closed,
        .js-nav-bar .subnav__control[aria-expanded="true"] .icon--is-open {
            display: inline;
        }


        /*
            Set-up slide toggling for subnavs:

			1. This puts the subnav behind the covering pseudo element. See .nav-bar::before, above.
            2. OSX/iOS needs this:
		*/
        .js-nav-bar .subnav {
            position: absolute;
            visibility: hidden;
            left: 0;
            right: 0;
            top: 0;
            z-index: -2; /* 1 */          

            height: $f__nav-bar--height; /* 2 */

            -webkit-transition: margin-top 0.5s ease,
                                visibility 0s   ease 0.5s;
               -moz-transition: margin-top 0.5s ease,
                                visibility 0s   ease 0.5s;
                 -o-transition: margin-top 0.5s ease,
                                visibility 0s   ease 0.5s;
                    transition: margin-top 0.5s ease,
                                visibility 0s   ease 0.5s;
        }
        
        .js-nav-bar .subnav__items {
            margin: 0;
            padding: 0;
        }

        .js-nav-bar .subnav__control[aria-expanded="true"] ~ .subnav {
            visibility: visible;
            margin-top: $f__nav-bar--height;

            -webkit-transition: margin-top 0.5s ease;
               -moz-transition: margin-top 0.5s ease;
                 -o-transition: margin-top 0.5s ease;
                    transition: margin-top 0.5s ease;
        }

    /* -------------------------------------------------------------------------------------------*/

    }

/* -----------------------------------------------------------------------------------------------*/
