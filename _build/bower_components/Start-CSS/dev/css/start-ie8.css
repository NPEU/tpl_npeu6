/*-------------------------------------------------------------------------------------------------|
    Fall-Back Start-CSS Settings v1.0.0

    Fall-Back is designed for use with the basic
    [CSS Mustard Cut](https://github.com/Fall-Back/CSS-Mustard-Cut)

    This determines a browser support base of:

    IE 9+, FF 8+, Opera 12, [Chrome 29+, Android ~4.4+]
    Chrome 29+, Opera 16+, Safari 6.1+, iOS 7+, Android ~4.4+


    Any double-classing (e.g. `.class.class`) is deliberate and intended to increase specifity.
    This allows any applicable Start-CSS declarations to be overidden.
    E.g. `.{pattern} .{pattern}__child` would `a[href]`, but just `.{pattern}` wouldn't, so we use
    `.{pattern}.{pattren}`

|-------------------------------------------------------------------------------------------------*/
/*! Start CSS. See SCSS file for documentation. */
/*

    Start CSS is designed for use with the basic
    [CSS Mustard Cut](https://github.com/Fall-Back/CSS-Mustard-Cut)

    This determines a browser support base of:

    IE 9+, FF 8+, Opera 12, [Chrome 29+, Android ~4.4+]
    Chrome 29+, Opera 16+, Safari 6.1+, iOS 7+, Android ~4.4+

    Notes:

    -moz-calc because this supports FF8+ and I like to be thorough.

    CSS hacks from http://browserstrangeness.com/css_hacks.html
    (hack and browser support in comments above each usage)

    !!! Maybe don't include custom properties in this, I think it over-complicates things and needs
    gradient background overlays to lighten/darken background colors dynamically.
    Possibly include a separate file to add custom property support that overrides what it needs,
    all wrapped in an `@supports`.

    Resources:
    * http://www.smashingmagazine.com/2012/12/css-baseline-the-good-the-bad-and-the-ugly/
    * https://24ways.org/2006/compose-to-a-vertical-rhythm

    NOTE TO SELF.
    Where borders are concerned, probably best to leave margins alone and use padding to maintain
    baseline-grid. After all, if there's a border, there will have to be padding too.

    overflow-y makes element focussable in FireFox.

*/
/*-------------------------------------------------------------------------------------------------|
    Fall-Back Start-CSS Settings v1.0.0

    Fall-Back is designed for use with the basic
    [CSS Mustard Cut](https://github.com/Fall-Back/CSS-Mustard-Cut)

    This determines a browser support base of:

    IE 9+, FF 8+, Opera 12, [Chrome 29+, Android ~4.4+]
    Chrome 29+, Opera 16+, Safari 6.1+, iOS 7+, Android ~4.4+


    Any double-classing (e.g. `.class.class`) is deliberate and intended to increase specifity.
    This allows any applicable Start-CSS declarations to be overidden.
    E.g. `.{pattern} .{pattern}__child` would `a[href]`, but just `.{pattern}` wouldn't, so we use
    `.{pattern}.{pattren}`

|-------------------------------------------------------------------------------------------------*/
/*-------------------------------------------------------------------------------------------------|

    FUNCTIONS AND MIXINS
   (These must come before the Setting, as the settings make use of some of these)

|-------------------------------------------------------------------------------------------------*/
/*
    Colour contrast from https://gist.github.com/FStop/8959422
    
    Usage:
    @if color_contrast($colour, #fff) < 2 {
        color: #333;
    }
    @else{
        color: #fff;
    }
*/
/* Awesome contrast ratio function
* via https://gist.github.com/voxpelli/6304812
**/
/*
    Apply a border and a padding that offsets the border-width from one spacing unit so as not to
    affect the vertical rhythm.
    Note the Opera Mini doesn't support `calc` so we need to include normal padding for that
    browser.
    Also, since we're supporting FF 8+, we're including -moz-calc for versions up to 16.
    I may consider removing this as those browsers are dead, but I'm just being thorough for now.

    Note on the 'last margin' issue/hack:
    The pseudo element is intended to provide a collapsible margin to cancel out any 'trailing'
    margins from content elements. However, since we're reducing the whole padding space by the
    border-width to maintain the vertical rhythm, that margin is also less, BUT the content margin
    is NOT being reduced, so that wins out - the reduction is ignored.
    If the pseudo element bottom margin is adjusted to cancel out the height (1px) AS WELL AS
    the amount of border-width, but the last element DOES NOT have a margin, then the space becomes
    too small.
    If pseudo-element height is 0, it doesn't work in IE, Chrome, Safari, without inline-block
*/
/*
    This button mixin isn't really meant for generating specific/themed _types_ of button - there
    would be too much code duplication for that.
    Instead, this is intended to create buttons for new/custom selectors.
    For example:

    ```
    [role="button"] {
        @include button;
    }
    ```

    rather than:

    ```
        .btn--affirmative {
            @include button(<text-color>, <bg-color>);
        }
    ```

    Note - because of this, think about removing parameters (it changed from my original intention -
    I may change it back or split this into 2 mixins, or even just move things that are meant for
    input[type="button"] to that ruleset - actually that's not a bad idea).

*/
/*
    1. Remove the tapping delay from clickable elements.

    Sort out the height of buttons. At 12px spacing, should be 30px high with 3px top/bottom margin.
    Note Edge doesn't like: `line-height: calc(3rem - 2px)` if `display: inline-flex`
    FF8 - ? doesn't like `line-height: -moz-calc()` and ignores
    Need to make sure height is governed by line-height in case of breaks within buttons.
*/
/*-------------------------------------------------------------------------------------------------|

    SETTINGS

|-------------------------------------------------------------------------------------------------*/
/* Global focus style: */
/*
$anchor-focus-text-color: false;
@if $anchor-focus-background-color != false {
    @if color_light_or_dark($anchor-focus-background-color) == 'light' {
        $anchor-focus-text-color: darken($anchor-text-color, 50%);
    } @else {
        $anchor-focus-text-color: lighten($anchor-text-color, 70%);
    }
}
@debug $anchor-focus-text-color;
*/
/*
//$button-focus-outline-width: $ui-focus-outline-width !default;
$button-focus-outline-width: false !default;
$button-focus-outline-style: $ui-focus-outline-style !default;
$button-focus-outline-color: rgba(255,255,255,0.6) !default;
//$button-focus-outline-offset: -($ui-focus-outline-offset + $button-border-width) !default;
$button-focus-outline-offset: -($ui-focus-outline-offset + $button-border-width) !default;
*/
/*$input-focus-indicator-color: false !default;
@if color_light_or_dark($input-background-color) == 'light' {
    $input-focus-indicator-color: darken($input-background-color, 30%);
} @else {
    $input-focus-indicator-color: lighten($input-background-color, 30%);
}
@debug color_light_or_dark($input-background-color);*/
/* Output class for reference (tmp): */
.ref {
  fallback--base-rem-space-unit: 2.4rem;
  fallback--base-rem-1px: 0.1rem;
  fallback--root-font-size: 10px;
  fallback--root-font-size-percent: 62.5;
}

/*-------------------------------------------------------------------------------------------------|

    ACCESSIBILITY / ARIA
    Moved to it's own file. Still debating this.

|-------------------------------------------------------------------------------------------------*/
/*! Start CSS Accessibility. See SCSS file for documentation. */
/*

    Notes:

    I'm debating moving separating this from the core file.
    I'm not sure which approach I prefer.
    Will probably go down the route of only having optional stuff in separate files - not sure.
*/
/*-------------------------------------------------------------------------------------------------|

    ACCESSIBILITY / ARIA

|-------------------------------------------------------------------------------------------------*/
/*-------------------------------------------------------------------------------------------------|

    UTILITIES
    Moved to it's own file. Still debating this.

-|------------------------------------------------------------------------------------------------*/
/*! Start CSS Utilities. See SCSS file for documentation. */
/*

    Notes:

    I'm debating moving separating this from the core file.
    I'm not sure which approach I prefer.
    Will probably go down the route of only having optional stuff in separate files - not sure.
*/
/*-------------------------------------------------------------------------------------------------|

    UTILITIES

-|------------------------------------------------------------------------------------------------*/
/*! End Start CSS */
.ref {
  fallback--base-px-space-unit: 24px;
}

body {
  line-height: 24px;
  padding: 24px;
}

address {
  margin-bottom: 24px;
}

article {
  margin-bottom: 24px;
}

aside {
  margin-bottom: 24px;
}

blockquote {
  margin-bottom: 24px;
  margin-left: 24px;
}

button {
  min-height: -66px;
  line-height: 24px;
  padding-top: 2px;
  padding-bottom: 2px;
  padding-left: 6px;
  padding-right: 6px;
  margin: 3px 0;
}

caption {
  padding-top: 12px;
  padding-right: 12px;
  padding-bottom: 12px;
  padding-left: 12px;
}

dd {
  margin-left: 36px;
}

dl {
  margin-bottom: 24px;
}

fieldset {
  margin-bottom: 24px;
  padding-top: 23px;
  padding-left: 23px;
  padding-right: 23px;
}

fieldset:after {
  display: block;
  content: "";
  height: 0;
  margin-top: -1px;
  margin-bottom: 24px;
}

fieldset fieldset:after {
  display: none;
}

figure {
  margin-bottom: 24px;
}

footer {
  margin-bottom: 24px;
}

form {
  margin-bottom: 24px;
}

header {
  margin-bottom: 24px;
}

h1 {
  margin-bottom: 24px;
  line-height: 60px;
}

h2 {
  margin-bottom: 24px;
  line-height: 48px;
}

h3 {
  margin-bottom: 24px;
  line-height: 36px;
}

h4 {
  margin-bottom: 24px;
  line-height: 36px;
}

h5 {
  margin-bottom: 24px;
  line-height: 24px;
}

h6 {
  margin-bottom: 24px;
}

hr {
  margin-top: -1px;
  margin-bottom: 24px;
}

input {
  padding-top: 3px;
  padding-right: 6px;
  padding-bottom: 3px;
  padding-left: 6px;
  min-height: 20px;
}

[type="button"],
[type="reset"],
[type="submit"] {
  min-height: -66px;
  line-height: 24px;
  padding-top: 2px;
  padding-bottom: 2px;
  padding-left: 6px;
  padding-right: 6px;
  margin: 3px 0;
}

[type="file"] {
  min-height: 28px;
}

label {
  padding-top: 6px;
  padding-bottom: 6px;
}

li {
  margin-left: 36px;
}

ol {
  margin-bottom: 24px;
  display: block;
}

p {
  margin-bottom: 24px;
}

pre {
  margin-bottom: 24px;
}

/*
	1. Anything other than `inline` and things break. 
	Inline-block in Start-CSS was there to retain padding and line-wrapping, but that's an 
	acceptable loss.
*/
pre code {
  display: inline;
  /* 1 */
  padding: 12px;
}

section {
  margin-bottom: 24px;
}

select {
  height: 28px;
  line-height: 24px;
  margin: 4px 0;
}

table {
  margin-bottom: 24px;
}

td {
  padding-top: 12px;
  padding-right: 12px;
  padding-bottom: 11px;
  padding-left: 12px;
}

textarea {
  min-height: 82px;
  padding-left: 6px;
  padding-right: 6px;
  margin-top: 2px;
  margin-bottom: 0;
  /* 3 */
}

th {
  padding-top: 12px;
  padding-right: 12px;
  padding-bottom: 11px;
  padding-left: 12px;
}

ul {
  margin-bottom: 24px;
}

/*
	Turn off custom bullets.
*/
ul li {
  list-style: disc;
}

ul ul li {
  list-style: circle;
}

ul ul ul li {
  list-style: square;
}

ul li:before {
  display: none;
}
