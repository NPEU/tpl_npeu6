/*

*/

$user-content-namespace: c- !default;

$theme-namespace: t- !default;

$theme-only: false !default;

// Note - no theme yet!

// We don't need this if we're only themeing the pattern:
@if $theme-only == false {
    .#{$user-content-namespace}user-content {

        // Contact list:
        [data-contains~="contact-details"] {
            @extend .c-contact-list;
        }


        // For theme-specific settings, see _themes.scss
        // Note this is identical to Panel, but that mixin can't be use because of the way it adds
        // classes. May need to rethink things.
        [data-display-as~="box"],
        [data-display-as~="themed-box"],
        [data-display-as~="notice-box"] {
            padding: $panel--padding;
            
            margin-bottom: $sz-m;
        
            @include bottom-space-fix();
           
            width: 100%;
        }
        
        [data-display-as~="box"] {
            border: 1px solid map-get(map-get($themes, neutral), primary-color);
        }
        
        [data-display-as~="themed-box"] {
            color: #fff;
            background: map-get(map-get($themes, npeu), primary-color);

            //outline: 1px solid $border-color;
            
            a[href] {
                color: #fff;
                //background-color: $background-color;
            }
            
            a[href]:hover,
            a[href]:active,
            a[href]:focus {
                color: #fff;
            }
            
            a[href].cta {
                border-color: #fff;
                color: #fff;
                background-color: transparent;
            }
            
            a[href].cta:hover,
            a[href].cta:active,
            a[href].cta:focus {
                @if f__color_light_or_dark(map-get(map-get($themes, npeu), primary-color)) == 'light' {
                    background-color: rgba(0,0,0,0.1);
                } @else {
                    background-color: rgba(255,255,255,0.1);
                }
            }
        }
        
        [data-display-as~="notice-box"] {
            border: 6px solid map-get(map-get($themes, npeu), secondary-color);
            background: scale-color(map-get(map-get($themes, npeu), secondary-color), $lightness: 93%);
            
            a[href].cta:hover,
            a[href].cta:active,
            a[href].cta:focus {
                @if f__color_light_or_dark(map-get(map-get($themes, npeu), secondary-color)) == 'light' {
                    background-color: rgba(0,0,0,0.1);
                } @else {
                    background-color: rgba(255,255,255,0.1);
                }
            }
        }

        // Layouts:

        [data-display-as~="blocks"] {
            @extend .l-distribute-wrap;
        }

        [data-display-as~="blocks"] > * {
            @extend .l-distribute;
        }

        [data-display-as~="blocks"] > * > * {
            @extend .u-space--below;
            @extend .u-text-align--center;
            @extend .u-padding--sides--s;
            
            -webkit-flex-basis: 15em;
                    flex-basis: 11.25em;
                     max-width: 15em;
        }



        [data-contains~="thumbnail"] {
            @extend .c-thumbnail;
        }


        [data-contains~="thumbnails"] a:first-of-type {
            @extend .c-thumbnail;
            @extend .u-space--below;
        }



        // Images:
        img {
            background: #fff;
        }

        b > img,
        b > i > img {
            border: 1px solid lighten(map-get(map-get($themes, neutral), primary-color), 10%);
        }

        b > i > img {
            padding: $sz-s;
        }


        // Avatar / portrait:
        img[src*="/img/avatars/"] {
            @extend .c-contact-avatar;
            @extend .d-bands;
        }
        
        // Text content:
        [data-display-as~="smallprint"] {
            font-size: 0.75em;
        }
        
        [data-display-as~="strapline"] {
            font-size: 1.125em;
        }

    }
}